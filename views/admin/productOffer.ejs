<!DOCTYPE HTML>
<html lang="en">


<!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-categories.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:21 GMT -->

<head>
    <meta charset="utf-8">
    <title>MyShade</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="admin-assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="admin-assets/css/main.css" rel="stylesheet" type="text/css" />


    <!-- Link tag for toastify-js CSS -->
    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.6.1/toastify.min.css">
        <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
       <style>
        
        body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f8f9fa;
}

.content-main {
    max-width: 1200px;
    margin: 20px auto;
    padding: 20px;
    background-color: #ffffff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
}

.content-main h1 {
    text-align: center;
    color: #333;
    margin-bottom: 20px;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
}

table th, table td {
    padding: 12px;
    border: 1px solid #ddd;
    text-align: left;
}

table th {
    background-color: #f2f2f2;
}

table tr:nth-child(even) {
    background-color: #f9f9f9;
}

button {
    padding: 10px 20px;
    color: #ffffff;
    background-color: #088178;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

button.edit-btn {
    background-color: #007bff;
}

button.delete-btn {
    background-color: #dc3545;
}

button:hover {
    opacity: 0.9;
}

button:focus {
    outline: none;
}

button + button {
    margin-left: 10px;
}

.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5);
}

.modal-content {
    background-color: #ffffff;
    margin: 10% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 500px;
    border-radius: 8px;
}

.modal-content h2 {
    margin-top: 0;
    color: #333;
}

.modal-content label {
    display: block;
    margin: 10px 0 5px;
    color: #333;
}

.modal-content input[type="text"],
.modal-content input[type="date"],
.modal-content input[type="number"],
.modal-content select {
    width: 100%;
    padding: 8px;
    margin: 5px 0 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
}

.modal-content button {
    width: 100%;
    background-color: #28a745;
}

.modal-content .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.modal-content .close:hover,
.modal-content .close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}


       </style>

</head>

<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="index.html" class="brand-wrap">
                <img src="/public/image/fashion club logo.jpg" class="logo" alt="Evara Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i>
                </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item ">
                    <a class="menu-link" href="adminDash"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="product"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                   </li>

                <li class="menu-item ">
                    <a class="menu-link" href="categories"> <i class="icon material-icons md-shopping_basket"></i>
                        <span class="text">Categories</span>
                    </a>
                   
                </li>
                <li class="menu-item has-submenu active">
                    <a class="menu-link" href=""> <i class="icon material-icons md-local_mall"></i>
                        <span class="text">Offer</span>
                    </a>
                    <div class="submenu">
                        <a href="/product-offers" class="active">ProductOffer</a>
                        <!-- <a href="page-products-grid.html">Product grid</a>
                        <a href="page-products-grid-2.html">Product grid 2</a> -->
                        <a href="/categoryOffer" >CategoryOffer</a>
                    </div>
                </li>
                
                <li class="menu-item ">
                    <a class="menu-link" href="addProduct"> <i class="icon material-icons md-add_box"></i>
                        <span class="text">Add product</span>
                    </a>
                   
                </li>
                <li class="menu-item  ">
                    <a class="menu-link" href="orderlist" > 
                        <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                   
                </li>
                
                <li class="menu-item ">
                    <a class="menu-link" href="userList"> <i class="icon material-icons md-person"></i>
                        <span class="text">Users</span>
                    </a>
                   
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="couponList"> <i class="icon material-icons md-local_offer"></i>
                        <span class="text">Coupon</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="salesReport"> <i class="icon material-icons md-monetization_on"></i>
                        <span class="text">Sales Report</span>
                    </a>
                </li>
              
            </ul>
            <br>
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <!-- <div class="col-search">
                <form class="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                        <button class="btn btn-light bg" type="button"> <i
                                class="material-icons md-search"></i></button>
                    </div>
                   
                </form>
            </div> -->
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i
                        class="material-icons md-apps"></i> </button>
               
            </div>
        </header>
        <section class="content-main">
            <h1>Product Offers</h1>
    
            <table>
                <thead>
                    <tr>
                        <th>Offer Name</th>
                        <th>Product</th>
                        <th>Starting Date</th>
                        <th>Ending Date</th>
                        <th>Discount (%)</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="offerTableBody">
                    <% offers.forEach(offer => { %>
                        <tr>
                            <td><%= offer.offerName %></td>
                            <td><%= offer.productOffer.product ? offer.productOffer.product.name : 'N/A' %></td>
                            <td><%= new Date(offer.startingDate).toLocaleDateString() %></td>
                            <td><%= new Date(offer.endingDate).toLocaleDateString() %></td>
                            <td><%= offer.productOffer.discount %></td>
                            <td><%= offer.productOffer.offerStatus ? 'Active' : 'Expired' %></td>
                            <td>
                                <button class="edit-btn" onclick="openEditModal('<%= offer._id %>', '<%= offer.offerName %>', '<%= offer.startingDate.toISOString().split(`T`)[0] %>', '<%= offer.endingDate.toISOString().split(`T`)[0] %>', '<%= offer.productOffer.discount %>')">Edit</button>
                                <form action="/delete-product-offer/<%= offer._id %>" method="POST" class="delete-product-offer-form" style="display:inline;">
                                    <button type="submit" class="delete-btn">Delete</button>
                                </form>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
    
            <button onclick="openModal('addModal')">Add Offer</button>
    
            <!-- Add Offer Modal -->
            <div id="addModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeModal('addModal')">&times;</span>
                    <h2>Add Offer</h2>
                    <form id="addOfferForm" action="/add-product-offer" method="POST" onsubmit="return validateAddOfferForm()">
                        <label for="productId">Product:</label>
                        <select name="productId" id="productId" required>
                            <% products.forEach(product => { %>
                                <option value="<%= product._id %>"><%= product.name %></option>
                            <% }) %>
                        </select>
                        <label for="offerName">Offer Name:</label>
                        <input type="text" name="offerName" id="offerName" required>
                        <span id="offerNameError" class="error-message"></span>
                        <label for="startingDate">Starting Date:</label>
                        <input type="date" name="startingDate" id="startingDate" required>
                        <label for="endingDate">Ending Date:</label>
                        <input type="date" name="endingDate" id="endingDate" required>
                        <label for="discount">Discount:</label>
                        <input type="number" name="discount" id="discount" required>
                        <span id="offerDiscountError" class="error-message"></span>
                        <button type="submit">Add Offer</button>
                    </form>
                </div>
            </div>
    
            <!-- Edit Offer Modal -->
            <div id="editModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeModal('editModal')">&times;</span>
                    <h2>Edit Offer</h2>
                    <form id="editOfferForm" action="/update-product-offer" method="POST" onsubmit="return validateEditOfferForm()">
                        <input type="hidden" name="offerId" id="editOfferId">
                        
                        <label for="editOfferName">Offer Name:</label>
                        <input type="text" name="offerName" id="editOfferName" required>
                        <span id="offerNameError1" class="error-message"></span>
                        <label for="editStartingDate">Starting Date:</label>
                        <input type="date" name="startingDate" id="editStartingDate" required>
                        <label for="editEndingDate">Ending Date:</label>
                        <input type="date" name="endingDate" id="editEndingDate" required>
                        <label for="editDiscount">Discount:</label>
                        <input type="number" name="discount" id="editDiscount" required>
                        <span id="offerDiscountError1" class="error-message"></span>
                        <button type="submit">Update Offer</button>
                    </form>
                </div>
            </div>
        </section>
    </main>   

        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>
                        document.write(new Date().getFullYear())
                    </script> ©, Evara - HTML Ecommerce Template .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
    </main>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="/public/admin-assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="/public/admin-assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/public/admin-assets/js/vendors/select2.min.js"></script>
    <script src="/public/admin-assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/public/admin-assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="/public/admin-assets/js/main.js" type="text/javascript"></script>
    <!-- Script tag for toastify-js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.6.1/toastify.min.js"></script>


    
     <script>
    document.querySelector('form[action="/add-product-offer"]').addEventListener('submit', async function(event) {
        event.preventDefault();
        const form = event.target;
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());

        try {
            const response = await fetch(form.action, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            const result = await response.json();
            if (result.success) {
                window.location.href = '/product-offers';
            } else {
                alert(result.message);
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Server error');
        }
    });
</script>

  

<script>
    document.getElementById('editOfferForm').addEventListener('submit', async function(event) {
        event.preventDefault();
        const form = event.target;
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());
        
        try {
            const response = await fetch(form.action, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            const result = await response.json();
            if (result.success) {
                window.location.href = '/product-offers';
            } else {
                alert(result.message);
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Server error');
        }
    });
</script>
<script>
   document.querySelectorAll('.delete-product-offer-form').forEach(form => {
    form.addEventListener('submit', async function(event) {
        event.preventDefault();
        
        const action = form.action;

        // Add SweetAlert confirmation dialog
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const response = await fetch(action, {
                        method: 'DELETE', // Use DELETE method for deletion
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    const result = await response.json();
                    if (result.success) {
                        Swal.fire(
                            'Deleted!',
                            'Your offer has been deleted.',
                            'success'
                        ).then(() => {
                            window.location.reload(); // Reload page on successful deletion
                        });
                    } else {
                        Swal.fire(
                            'Error!',
                            result.message,
                            'error'
                        );
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire(
                        'Error!',
                        'Server error',
                        'error'
                    );
                }
            }
        });
    });
});

</script>



<script>
    function openModal(modalId) {
        document.getElementById(modalId).style.display = "block";
    }

    function closeModal(modalId) {
        document.getElementById(modalId).style.display = "none";
    }

    function openEditModal(offerId, offerName, startingDate, endingDate, discount) {
        document.getElementById('editOfferId').value = offerId;
        document.getElementById('editOfferName').value = offerName;
        document.getElementById('editStartingDate').value = startingDate;
        document.getElementById('editEndingDate').value = endingDate;
        document.getElementById('editDiscount').value = discount;
        openModal('editModal');
    }

    window.onclick = function(event) {
        const addModal = document.getElementById('addModal');
        const editModal = document.getElementById('editModal');
        if (event.target == addModal) {
            addModal.style.display = "none";
        }
        if (event.target == editModal) {
            editModal.style.display = "none";
        }
    }

    function validateAddOfferForm() {
        const form = document.getElementById('addOfferForm');
        return validateForm(form);
    }

    function validateEditOfferForm() {
        const form = document.getElementById('editOfferForm');
        return validateForm(form);
    }

    function validateForm(form) {
        const productId = form.querySelector('[name="productId"]');
        const offerName = form.querySelector('[name="offerName"]');
        const startingDate = form.querySelector('[name="startingDate"]');
        const endingDate = form.querySelector('[name="endingDate"]');
        const discount = form.querySelector('[name="discount"]');

        let isValid = true;
        let errorMessage = "";

        if (!productId.value) {
            isValid = false;
            errorMessage += "Product is required.\n";
        }
        if (!offerName.value) {
            isValid = false;
            errorMessage += "Offer Name is required.\n";
        }
        if (!startingDate.value) {
            isValid = false;
            errorMessage += "Starting Date is required.\n";
        }
        if (!endingDate.value) {
            isValid = false;
            errorMessage += "Ending Date is required.\n";
        }
        if (startingDate.value && endingDate.value && new Date(startingDate.value) > new Date(endingDate.value)) {
            isValid = false;
            errorMessage += "Starting Date cannot be after Ending Date.\n";
        }
        if (!discount.value || discount.value <= 0) {
            isValid = false;
            errorMessage += "Discount must be a positive number greater than 0.\n";
        }

        if (!isValid) {
            alert(errorMessage);
        }

        return isValid;
    }

    function submitAddOfferForm(event) {
        event.preventDefault();
        if (validateAddOfferForm()) {
            event.target.submit(); // submit the form if validation is successful
        }
    }

    function submitEditOfferForm(event) {
        event.preventDefault();
        if (validateEditOfferForm()) {
            event.target.submit(); // submit the form if validation is successful
        }
    }
    function openModal(modalId) {
        document.getElementById(modalId).style.display = "block";
    }
    
    function closeModal(modalId) {
        document.getElementById(modalId).style.display = "none";
    }
</script>
<script>

function validateAddOfferForm() {
    var offerName = document.getElementById("offerName").value;
    var offerDiscount = document.getElementById("discount").value;
    var offerNameError = document.getElementById("offerNameError");
    var offerDiscountError = document.getElementById("offerDiscountError");

    offerNameError.innerHTML = "";
    offerDiscountError.innerHTML = "";

    // Validate offerName
    if (!offerName.match(/^[a-zA-Z0-9\s]+$/) || offerName.trim() == "") {
        offerNameError.innerText = "Offer name can only contain letters, numbers, and spaces.";
        return false;
    }

    // Validate offerDiscount
    if (offerDiscount === "") {
        offerDiscountError.innerText = "Please enter a discount value.";
        return false;
    }

    // Check if offerDiscount is a valid number and within range
    if (isNaN(offerDiscount) || parseFloat(offerDiscount) < 0 || parseFloat(offerDiscount) > 99) {
        offerDiscountError.innerText = "Enter a valid discount value (0-99).";
        return false;
    }

    return true;
}

function validateEditOfferForm() {
    var offerName = document.getElementById("editOfferName").value;
    var offerDiscount = document.getElementById("editDiscount").value;
    var offerNameError = document.getElementById("offerNameError1");
    var offerDiscountError = document.getElementById("offerDiscountError1");

    offerNameError.innerHTML = "";
    offerDiscountError.innerHTML = "";

    // Validate offerName
    if (!offerName.match(/^[a-zA-Z0-9\s]+$/) || offerName.trim() == "") {
        offerNameError.innerText = "Offer name can only contain letters, numbers, and spaces.";
        return false;
    }

    // Validate offerDiscount
    if (offerDiscount === "") {
        offerDiscountError.innerText = "Please enter a discount value.";
        return false;
    }

    // Check if offerDiscount is a valid number and within range
    if (isNaN(offerDiscount) || parseFloat(offerDiscount) < 0 || parseFloat(offerDiscount) > 99) {
        offerDiscountError.innerText = "Enter a valid discount value (0-99).";
        return false;
    }

    return true;
}

document.getElementById("addOfferForm").addEventListener("submit", function(event) {
    if (!validateAddOfferForm()) {
        event.preventDefault();
    }
});

document.getElementById("editOfferForm").addEventListener("submit", function(event) {
    if (!validateEditOfferForm()) {
        event.preventDefault();
    }
});
</script>


</body>


<!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-categories.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:21 GMT -->

</html>