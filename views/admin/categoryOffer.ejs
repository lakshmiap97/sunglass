<!DOCTYPE HTML>
<html lang="en">


<!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-categories.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:21 GMT -->

<head>
    <meta charset="utf-8">
    <title>MyShade</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="admin-assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="admin-assets/css/main.css" rel="stylesheet" type="text/css" />


    <!-- Link tag for toastify-js CSS -->
    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.6.1/toastify.min.css">
        <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
        <style>
         /* Basic table styles */
table {
    width: 100%;
    border-collapse: collapse;
    margin: 20px 0;
    font-size: 1em;
    font-family: Arial, sans-serif;
    text-align: left;
}

/* Table header styles */
thead tr {
    background-color: #f2f2f2;
    color: #333;
    text-align: left;
    font-weight: bold;
}

thead th, tbody td {
    padding: 12px 15px;
    border: 1px solid #ddd;
}

/* Table body styles */
tbody tr {
    border-bottom: 1px solid #ddd;
}

/* Alternate row colors */
tbody tr:nth-of-type(even) {
    background-color: #f9f9f9;
}

/* Hover effect */
tbody tr:hover {
    background-color: #f1f1f1;
}

/* Table cell styles */
td {
    padding: 10px;
}

/* Table status column styles */
td:last-child {
    text-align: center;
}

/* Additional styling for better readability */
table th {
    background-color: #7c867c;
    color: white;
}

        </style>

</head>

<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="index.html" class="brand-wrap">
                <img src="/public/image/fashion club logo.jpg" class="logo" alt="Evara Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i>
                </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item ">
                    <a class="menu-link" href="adminDash"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="product"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                   </li>

                <li class="menu-item ">
                    <a class="menu-link" href="categories"> <i class="icon material-icons md-shopping_basket"></i>
                        <span class="text">Categories</span>
                    </a>
                   
                </li>
                <li class="menu-item has-submenu active">
                    <a class="menu-link" href=""> <i class="icon material-icons md-local_mall"></i>
                        <span class="text">Offer</span>
                    </a>
                    <div class="submenu">
                        <a href="/product-offers" class="active">ProductOffer</a>
                        <!-- <a href="page-products-grid.html">Product grid</a>
                        <a href="page-products-grid-2.html">Product grid 2</a> -->
                        <a href="/categoryOffer" >CategoryOffer</a>
                    </div>
                </li>
                
                <li class="menu-item ">
                    <a class="menu-link" href="addProduct"> <i class="icon material-icons md-add_box"></i>
                        <span class="text">Add product</span>
                    </a>
                   
                </li>
                <li class="menu-item  ">
                    <a class="menu-link" href="orderlist" > 
                        <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                   
                </li>
                
                <li class="menu-item ">
                    <a class="menu-link" href="userList"> <i class="icon material-icons md-person"></i>
                        <span class="text">Users</span>
                    </a>
                   
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="couponList"> <i class="icon material-icons md-local_offer"></i>
                        <span class="text">Coupon</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="salesReport"> <i class="icon material-icons md-monetization_on"></i>
                        <span class="text">Sales Report</span>
                    </a>
                </li>
              
            </ul>
            <br>
            <br>
            
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <!-- <div class="col-search">
                <form class="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                        <button class="btn btn-light bg" type="button"> <i
                                class="material-icons md-search"></i></button>
                    </div>
                   
                </form>
            </div> -->
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i
                        class="material-icons md-apps"></i> </button>
               
            </div>
        </header>
        <section class="content-main">
            <div class="container">
                <h2>Category Offers</h2>
        
                <!-- Offer Table -->
                <table class="table table-bordered table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Offer Name</th>
                            <th>Category</th>
                            <th>Discount</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% catOffers.forEach(offer => { %>
                        <tr>
                            <td><%= offer.offerName %></td>
                            <td><%= offer.categoryOffer.category ? offer.categoryOffer.category.name : 'N/A' %></td>
                            <td><%= offer.categoryOffer.discount %>%</td>
                            <td><%= new Date(offer.startingDate).toLocaleDateString() %></td>
                            <td><%= new Date(offer.endingDate).toLocaleDateString() %></td>
                            <td>
                                <button class="btn btn-success updateOfferBtn" data-toggle="modal" data-target="#updateOfferModal"
                                onclick="openEditModal('<%= offer._id %>', '<%= offer.offerName %>', '<%= new Date(offer.startingDate).toISOString().substring(0, 10) %>', '<%= new Date(offer.endingDate).toISOString().substring(0, 10) %>', '<%= offer.categoryOffer.discount %>')">
                                Update
                            </button>
                            <form action="/deleteOffer/<%= offer._id %>" method="POST" class="delete-offer-form" style="display:inline;">
                                <button type="submit" class="btn btn-danger">Delete</button>
                            </form>
                            </td>
                        </tr>
                        <% }) %>
                    </tbody>
                </table>
                <button onclick="openModal('addModal')" class="btn btn-primary">Add Category Offer</button>
            </div>
        
            <!-- Add Offer Modal -->
            <div id="addModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeModal('addModal')">&times;</span>
                    <h2>Add Offer</h2>
                    <form id="addOfferForm" action="/add-category-offer" method="POST" onsubmit="submitForm(event, 'addOfferForm', 'addModal')">
                        <label for="categoryId">Category:</label>
                        <select name="categoryId" id="categoryId" class="form-select" required>
                            <% category.forEach(cat => { %>
                            <option value="<%= cat._id %>"><%= cat.name %></option>
                            <% }) %>
                        </select>
                        <p id="error1" style="display: none; color: red;"></p>
                        <label for="offerName">Offer Name:</label>
                        <input type="text" name="offerName" id="offerName" class="form-control" required>
                        <p id="error2" style="display: none; color: red;"></p>
                        <label for="startingDate">Starting Date:</label>
                        <input type="date" name="startingDate" id="startingDate" class="form-control" required>
                        <p id="error3" style="display: none; color: red;"></p>
                        <label for="endingDate">Ending Date:</label>
                        <input type="date" name="endingDate" id="endingDate" class="form-control" required>
                        <p id="error4" style="display: none; color: red;"></p>
                        <label for="discount">Discount:</label>
                        <input type="number" name="discount" id="discount" class="form-control" required>
                        <p id="error5" style="display: none; color: red;"></p>
                        <button type="submit" class="btn btn-primary mt-3">Add Offer</button>
                    </form>
                </div>
            </div>
            
            <!-- Update Offer Modal -->
            <div id="updateOfferModal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closeModal('updateOfferModal')">&times;</span>
                    <h2>Edit Offer</h2>
                    <form id="editOfferForm" action="/update-category-offer" method="POST" onsubmit="submitForm(event, 'editOfferForm', 'updateOfferModal')">
                        <label for="editcategoryId">Category:</label>
                        <select name="categoryId" id="editcategoryId" class="form-select" required>
                            <% category.forEach(cat => { %>
                            <option value="<%= cat._id %>"><%= cat.name %></option>
                            <% }) %>
                        </select>
                        <input type="hidden" name="offerId" id="editOfferId">
                        <p id="editError1" style="display: none; color: red;"></p>
                        <label for="editOfferName">Offer Name:</label>
                        <input type="text" name="offerName" id="editOfferName" class="form-control" required>
                        <p id="editError2" style="display: none; color: red;"></p>
                        <label for="editStartingDate">Starting Date:</label>
                        <input type="date" name="startingDate" id="editStartingDate" class="form-control" required>
                        <p id="editError3" style="display: none; color: red;"></p>
                        <label for="editEndingDate">Ending Date:</label>
                        <input type="date" name="endingDate" id="editEndingDate" class="form-control" required>
                        <p id="editError4" style="display: none; color: red;"></p>
                        <label for="editDiscount">Discount (%):</label>
                        <input type="number" name="discount" id="editDiscount" class="form-control" required>
                        <p id="editError5" style="display: none; color: red;"></p>
                        <button type="submit" class="btn btn-primary mt-3">Update Offer</button>
                    </form>
                </div>
            </div>
            
        </section>
    
        <footer class="main-footer text-center mt-4">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>document.write(new Date().getFullYear())</script> ©, Evara - HTML Ecommerce Template.
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">All rights reserved</div>
                </div>
            </div>
        </footer>
    </main>
    


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="/public/admin-assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="/public/admin-assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/public/admin-assets/js/vendors/select2.min.js"></script>
    <script src="/public/admin-assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/public/admin-assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="/public/admin-assets/js/main.js" type="text/javascript"></script>
    <!-- Script tag for toastify-js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.6.1/toastify.min.js"></script>

   
    <script>
        // Function to handle form submission for adding offers
        document.getElementById('addOfferForm').addEventListener('submit', async function(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());
    
            try {
                const response = await fetch(form.action, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
    
                const result = await response.json();
                if (result.success) {
                    window.location.href = '/categoryOffer'; // Redirect to categoryOffer page on success
                } else {
                    alert(result.message); // Display error message if not successful
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Server error');
            }
        });
    
        // Function to handle form submission for editing offers
        document.getElementById('editOfferForm').addEventListener('submit', async function(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());
    
            try {
                const response = await fetch(form.action, {
                    method: 'PUT', // Use PUT method for update
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
    
                const result = await response.json();
                if (result.success) {
                    window.location.href = '/categoryOffer'; // Redirect to categoryOffer page on success
                } else {
                    alert(result.message); // Display error message if not successful
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Server error');
            }
        });
    
        document.querySelectorAll('.delete-offer-form').forEach(form => {
    form.addEventListener('submit', async function(event) {
        event.preventDefault();

        const action = form.action;

        // Add SweetAlert confirmation dialog
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const response = await fetch(action, {
                        method: 'POST', // Use DELETE method for deletion
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    const result = await response.json();
                    if (result.success) {
                        Swal.fire(
                            'Deleted!',
                            'Your offer has been deleted.',
                            'success'
                        ).then(() => {
                            window.location.reload(); // Reload page on successful deletion
                        });
                    } else {
                        Swal.fire(
                            'Error!',
                            result.message,
                            'error'
                        );
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire(
                        'Error!',
                        'Server error',
                        'error'
                    );
                }
            }
        });
    });
});

    
        // Function to open and close modals
        function openModal(modalId) {
            document.getElementById(modalId).style.display = "block";
        }
    
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = "none";
        }
    
        // Close modals when clicking outside of them
        window.onclick = function(event) {
            const addModal = document.getElementById('addModal');
            const editModal = document.getElementById('editModal');
            if (event.target == addModal) {
                addModal.style.display = "none";
            }
            if (event.target == editModal) {
                editModal.style.display = "none";
            }
        }
    </script>


   <script>
    function openEditModal(offerId, offerName, startingDate, endingDate, discount) {
        document.getElementById('editOfferId').value = offerId;
        document.getElementById('editOfferName').value = offerName;
        document.getElementById('editStartingDate').value = startingDate;
        document.getElementById('editEndingDate').value = endingDate;
        document.getElementById('editDiscount').value = discount;

        // Show the modal
        document.getElementById('updateOfferModal').style.display = 'block';
    }

    function closeModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }

    async function submitForm(event, formId, modalId) {
        event.preventDefault();
        const form = document.getElementById(formId);

        try {
            // Additional form submission logic (AJAX or form submission)
            await fetch(form.action, {
                method: form.method,
                body: new FormData(form)
            });

            // Close the modal
            closeModal(modalId);

            // Redirect to /categoryOffer
            window.location.href = '/categoryOffer';
        } catch (error) {
            console.error('Form submission error:', error);
            // Handle error if needed
        }
    }

    // Close the modal when clicking outside of it
    window.onclick = function(event) {
        const modal = document.getElementById('updateOfferModal');
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>

<script>
function closeModal(modalId) {
    document.getElementById(modalId).style.display = 'none';
}

function showError(elementId, message) {
    const errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = 'block';
}

function hideError(elementId) {
    const errorElement = document.getElementById(elementId);
    errorElement.style.display = 'none';
}

function validateForm(modalId) {
    let isValid = true;
    
    const formPrefix = modalId === 'addModal' ? '' : 'edit';
    const categoryId = document.getElementById(`${formPrefix}categoryId`).value;
    const offerName = document.getElementById(`${formPrefix}OfferName`).value.trim();
    const startingDate = document.getElementById(`${formPrefix}StartingDate`).value;
    const endingDate = document.getElementById(`${formPrefix}EndingDate`).value;
    const discount = document.getElementById(`${formPrefix}Discount`).value;
    
    if (!categoryId) {
        showError(`${formPrefix}Error1`, 'Category is required.');
        isValid = false;
    } else {
        hideError(`${formPrefix}Error1`);
    }
    
    if (!offerName) {
        showError(`${formPrefix}Error2`, 'Offer name is required.');
        isValid = false;
    } else {
        hideError(`${formPrefix}Error2`);
    }
    
    if (!startingDate) {
        showError(`${formPrefix}Error3`, 'Starting date is required.');
        isValid = false;
    } else {
        hideError(`${formPrefix}Error3`);
    }
    
    if (!endingDate) {
        showError(`${formPrefix}Error4`, 'Ending date is required.');
        isValid = false;
    } else if (new Date(endingDate) < new Date(startingDate)) {
        showError(`${formPrefix}Error4`, 'Ending date cannot be before starting date.');
        isValid = false;
    } else {
        hideError(`${formPrefix}Error4`);
    }
    
    if (!discount) {
        showError(`${formPrefix}Error5`, 'Discount is required.');
        isValid = false;
    } else if (discount <= 0) {
        showError(`${formPrefix}Error5`, 'Discount must be a positive number.');
        isValid = false;
    } else {
        hideError(`${formPrefix}Error5`);
    }
    
    return isValid;
}

function submitForm(event, formId, modalId) {
    event.preventDefault();
    if (validateForm(modalId)) {
        document.getElementById(formId).submit();
    }
}
</script>
</body>


<!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-categories.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:21 GMT -->

</html>