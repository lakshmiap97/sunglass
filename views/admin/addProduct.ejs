<!DOCTYPE HTML>
<html lang="en">


<!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-form-product-1.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:31 GMT -->
<head>
    <meta charset="utf-8">
    <title>STAG Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="admin-assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="admin-assets/css/main.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.11.0/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
    <link rel="stylesheet" href="/public/cropperjs/cropper.css">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
 .menu-aside .menu-item.active .submenu a.active {
    color: #088178 !important;
    text-decoration: none;
        }
    .menu-aside .submenu a {
    color: #6c757d;
    padding: 5px 0 5px 15px;
    -webkit-transition-duration: 0.3s;
    transition-duration: 0.3s;
    position: relative;
    margin-left: 5px;
    text-decoration: none;
}
    .menu-aside .menu-link {
    padding: 10px;
    font-weight: 500;
    font-size: 14px;
    color: #292f46;
    border-radius: 0.3rem;
    position: relative;
    text-decoration: none;
}
/* Container styling */
.container {
    max-width: 800px; /* Adjust the maximum width as needed */
    margin: 0 auto; /* Center the container */
    padding: 20px; /* Add some padding */
    background-color: #f9f9f9; /* Light background color */
    border-radius: 8px; /* Rounded corners */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */
}

/* Row styling */
.row {
    display: flex;
    justify-content: center;
}

/* Column styling */
.col-lg-3 {
    max-width: 300px; /* Adjust the width as needed */
    margin: 0 auto;
}

/* Card styling */
.card {
    border: none;
    border-radius: 8px; /* Rounded corners */
    overflow: hidden; /* Clip child elements */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */
}

.card-header {
    background-color: #007bff; /* Primary color */
    color: #fff; /* White text */
    padding: 10px 15px; /* Padding */
}

.card-header h4 {
    margin: 0; /* Remove margin */
}

.card-body {
    padding: 15px; /* Padding */
}

/* Input styling */
.input-upload {
    text-align: center;
}

#imagePreviewContainer {
    margin-bottom: 15px; /* Space below the preview container */
}

#imageInput {
    display: block;
    width: 100%; /* Full width */
    padding: 10px; /* Padding */
    border: 1px solid #ccc; /* Border */
    border-radius: 4px; /* Rounded corners */
}

/* Error message styling */
#error9 {
    margin-top: 10px; /* Space above the error message */
}

/* Button styling */
.btn-primary {
    background-color: #007bff; /* Primary color */
    border-color: #007bff; /* Border color */
    color: #fff; /* White text */
    padding: 10px 15px; /* Padding */
    font-size: 16px; /* Font size */
    border-radius: 4px; /* Rounded corners */
    transition: background-color 0.3s; /* Smooth transition */
}

.btn-primary:hover {
    background-color: #0056b3; /* Darker shade on hover */
}

/* Utility classes */
.mt-5 {
    margin-top: 3rem !important;
}

.mb-4 {
    margin-bottom: 1.5rem !important;
}

.d-grid {
    display: grid;
    gap: 10px; /* Gap between grid items */
}

    </style>
   
</head>

<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="index.html" class="brand-wrap">
                <img src="admin-assets/imgs/theme/logo.png" class="logo" alt="Evara Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item ">
                    <a class="menu-link" href="adminDash"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="product"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                   </li>

                <li class="menu-item ">
                    <a class="menu-link" href="categories"> <i class="icon material-icons md-shopping_basket"></i>
                        <span class="text">Categories</span>
                    </a>
                   
                </li>
                <li class="menu-item has-submenu ">
                    <a class="menu-link" href=""> <i class="icon material-icons md-local_mall"></i>
                        <span class="text">Offer</span>
                    </a>
                    <div class="submenu">
                        <a href="/product-offers" class="active">ProductOffer</a>
                        <!-- <a href="page-products-grid.html">Product grid</a>
                        <a href="page-products-grid-2.html">Product grid 2</a> -->
                        <a href="/categoryOffer" >CategoryOffer</a>
                    </div>
                </li>
                
                <li class="menu-item active">
                    <a class="menu-link" href="addProduct"> <i class="icon material-icons md-add_box"></i>
                        <span class="text">Add product</span>
                    </a>
                   
                </li>
                <li class="menu-item  ">
                    <a class="menu-link" href="orderlist" > 
                        <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                   
                </li>
                
                <li class="menu-item ">
                    <a class="menu-link" href="userList"> <i class="icon material-icons md-person"></i>
                        <span class="text">Users</span>
                    </a>
                   
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="couponList"> <i class="icon material-icons md-local_offer"></i>
                        <span class="text">Coupon</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="salesReport"> <i class="icon material-icons md-monetization_on"></i>
                        <span class="text">Sales Report</span>
                    </a>
                </li>


            </ul>
            <hr>
            
           
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
           
        </header>
        <section class="content-main">
            <div class="row">
                <div class="col-9">
                    <div class="content-header">
                        <h2 class="content-title">Add New Product</h2>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Basic</h4>
                        </div>
                        <div class="card-body">
                            <form method="post" action="/addProduct" id="pdtform" enctype="multipart/form-data" onsubmit="return confirmSubmission(event)">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">Product Name</label>
                                    <input type="text" name="name" placeholder="Type here" class="form-control" id="pdtname">
                                    <p id="error1" style="display: none; color: red;"></p>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Description</label>
                                    <textarea placeholder="Type here" name="description" id="pdtdes" class="form-control" rows="4"></textarea>
                                    <p id="error2" style="display: none; color: red;"></p>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Category</label>
                                   <select name="category" class="form-select" id="product_category">
    <option value="" selected disabled>Select a category</option>
    <% category.forEach(element => { %>
        <option value="<%= element._id %>"> <%= element.name %> </option>
    <% }) %>
</select>

                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Regular price</label>
                                            <div class="row gx-2">
                                                <input placeholder=" " id="regprice" name="regularPrice" type="text" class="form-control">
                                                <p id="error3" style="display: none; color: red;"></p>
                                                <p id="error8" style="display: none; color: red;"></p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Sales price</label>
                                            <input placeholder=" " id="saleprice" name="salesPrice" type="text" class="form-control">
                                            <p id="error4" style="display: none; color: red;"></p>
                                        </div>
                                    </div>
                                    <div id="colorQuantityContainer">
                                        <label for="colorSelect">Select Color:</label>
                                        <select id="colorSelect" onchange="showColorInputs()">
                                            <option value="">Select Color</option>
                                            <option value="black">Black</option>
                                            <option value="blue">Blue</option>
                                            <option value="green">Green</option>
                                            <option value="yellow">Yellow</option>
                                            <option value="red">Red</option>
                                        </select>
                                        <div id="selectedColorDisplay"></div>
                                        <div id="colorInputs"></div>
                                    </div>
                                </div>
                                <div class="container mt-5">
                                    <div class="row">
                                        <div class="col-lg-3">
                                            <div class="card mb-4">
                                                <div class="card-header">
                                                    <h4>Media</h4>
                                                </div>
                                                <div class="card-body">
                                                    <div class="input-upload">
                                                        <div id="imagePreviewContainer"></div>
                                                        <input name="image" id="imageInput" class="form-control" type="file" multiple onchange="previewImages()">
                                                        <p id="error9" style="display: none; color: red;"></p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <!-- Modal for cropping -->
                                            <div id="myModal" style="display:none;">
                                                <div class="modal-content">
                                                    <span class="close">&times;</span>
                                                    <img id="image" style="max-width: 100%;">
                                                    <button id="btn-crop">Crop</button>
                                                </div>
                                            </div>
                                            
                                            <input type="hidden" id="hiddenField1" name="hiddenField1" value="">
                                            <input type="hidden" id="hiddenField2" name="hiddenField2" value="">
                                            <input type="hidden" id="hiddenField3" name="hiddenField3" value="">
                                            <input type="hidden" id="hiddenField4" name="hiddenField4" value="">
                                            <div class="d-grid">
                                                <button type="submit" class="btn btn-primary">Add</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>
                    document.write(new Date().getFullYear())
                    </script> ©,STAG MEN FASHION .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
    </main>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
   
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <script src="admin-assets/js/vendors/jquery-3.6.0.min.js"></script>
   
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.11.0/dist/sweetalert2.all.min.js"></script>
    <script src="admin-assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="admin-assets/js/vendors/select2.min.js"></script>
    <script src="admin-assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="admin-assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="admin-assets/js/main.js" type="text/javascript"></script>
  

 


    <script>
        let selectedColors = [];

        function showColorInputs() {
            const colorSelect = document.getElementById('colorSelect');
            const selectedColor = colorSelect.value;
            const colorInputs = document.getElementById('colorInputs');
            
            // Check if color is already selected
            if (selectedColors.includes(selectedColor)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: `Color "${selectedColor}" is already selected.`,
                });
                return;
            }

            // Limit the selection to maximum 3 colors
            if (selectedColors.length >= 5) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'You can only select up to 5 colors.',
                });
                return;
            }

            // Add the selected color to the list
            selectedColors.push(selectedColor);

            // Create input for the selected color
            const input = document.createElement('input');
            input.type = 'number';
            input.id = selectedColor;
            input.name = selectedColor;
            input.placeholder = `Enter ${selectedColor} quantity`;
            input.required = true;
            colorInputs.appendChild(input);
        }
    </script>
    
   <script>
    function validateProductForm() {
        let isValid = true;

        // Get form elements
        const productName = document.getElementById('pdtname');
        const productDescription = document.getElementById('pdtdes');
        const regularPrice = document.getElementById('regprice');
        const salesPrice = document.getElementById('saleprice');
        const imageInput = document.getElementById('imageInput');

        // Error elements
        const error1 = document.getElementById('error1');
        const error2 = document.getElementById('error2');
        const error3 = document.getElementById('error3');
        const error4 = document.getElementById('error4');
        const error8 = document.getElementById('error8');
        const error9 = document.getElementById('error9');

        // Validate Product Name
        if (productName.value.trim() === '') {
            error1.textContent = 'Product name is required.';
            error1.style.display = 'block';
            isValid = false;
        } else {
            error1.style.display = 'none';
        }

        // Validate Description
        if (productDescription.value.trim() === '') {
            error2.textContent = 'Description is required.';
            error2.style.display = 'block';
            isValid = false;
        } else {
            error2.style.display = 'none';
        }

        // Validate Regular Price
        if (regularPrice.value.trim() === '') {
            error3.textContent = 'Regular price is required.';
            error3.style.display = 'block';
            isValid = false;
        } else if (isNaN(regularPrice.value) || regularPrice.value <= 0) {
            error3.textContent = 'Regular price must be a valid number greater than 0.';
            error3.style.display = 'block';
            isValid = false;
        } else {
            error3.style.display = 'none';
        }

        // Validate Sales Price
        if (salesPrice.value.trim() !== '') {
            if (isNaN(salesPrice.value) || salesPrice.value <= 0) {
                error4.textContent = 'Sales price must be a valid number greater than 0.';
                error4.style.display = 'block';
                isValid = false;
            } else if (parseFloat(salesPrice.value) >= parseFloat(regularPrice.value)) {
                error4.textContent = 'Sales price must be less than regular price.';
                error4.style.display = 'block';
                isValid = false;
            } else {
                error4.style.display = 'none';
            }
        } else {
            error4.style.display = 'none';
        }

        // Validate Image Upload
        if (imageInput.files.length === 0) {
            error9.textContent = 'At least one image is required.';
            error9.style.display = 'block';
            isValid = false;
        } else {
            error9.style.display = 'none';
        }

        return isValid;
    }
</script>
<script>

    function confirmSubmission(event) {
        event.preventDefault();

        if (validateProductForm()) {
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to add this product?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, add it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById('pdtform').submit();
                }
            });
        }
    }
</script>
<script>
    $(document).ready(function() {
        var cropper;
        var image = document.getElementById('image');
        var imageInput = document.getElementById('imageInput');
        var imagePreviewContainer = document.getElementById('imagePreviewContainer');

        imageInput.addEventListener('change', function(event) {
            var files = event.target.files;
            if (files && files.length > 0) {
                var file = files[0];
                var reader = new FileReader();
                reader.onload = function(e) {
                    image.src = e.target.result;

                    // Ensure the image is fully loaded before showing the modal
                    image.onload = function() {
                        $('#cropperModal').modal('show');
                    };
                };
                reader.readAsDataURL(file);
            }
        });

        $('#cropperModal').on('shown.bs.modal', function() {
            // Initialize Cropper.js when the modal is fully shown
            cropper = new Cropper(image, {
                aspectRatio: 1,
                viewMode: 3,
            });
        }).on('hidden.bs.modal', function() {
            // Destroy Cropper.js instance when the modal is hidden
            cropper.destroy();
            cropper = null;
        });

        document.getElementById('cropButton').addEventListener('click', function() {
            var canvas;
            if (cropper) {
                canvas = cropper.getCroppedCanvas({
                    width: 400,
                    height: 400,
                });
                canvas.toBlob(function(blob) {
                    var url = URL.createObjectURL(blob);
                    var img = document.createElement('img');
                    img.src = url;
                    img.style.width = '100px'; // Adjust the preview size as needed
                    img.style.height = '100px'; // Adjust the preview size as needed
                    imagePreviewContainer.innerHTML = ''; // Clear previous preview
                    imagePreviewContainer.appendChild(img);
                    // You can also append this blob to a FormData object for submission
                });
                $('#cropperModal').modal('hide');
            }
        });
    });
</script>
<script>
    function previewImages() {
        var previewContainer = document.getElementById('imagePreviewContainer');
        previewContainer.innerHTML = '';
        var files = document.getElementById('imageInput').files;
        if (files) {
            for (let i = 0; i < files.length; i++) {
                let reader = new FileReader();
                reader.onload = function (e) {
                    let img = document.createElement('img');
                    img.setAttribute('src', e.target.result);
                    img.setAttribute('width', '100');
                    img.setAttribute('height', '100');
                    previewContainer.appendChild(img);
                };
                reader.readAsDataURL(files[i]);
            }
        }
    }
    </script>

<script src="/public/cropperjs/cropper.js"></script>
<script>
    const imageInput = document.getElementById('imageInput');
    const errorMessage = document.getElementById('error9');
    const previewContainer = document.getElementById('imagePreviewContainer');
    const hiddenFields = [
        document.getElementById('hiddenField1'),
        document.getElementById('hiddenField2'),
        document.getElementById('hiddenField3'),
        document.getElementById('hiddenField4')
    ];
    let selectedFiles = [];

    function previewImages() {
        previewContainer.innerHTML = '';
        selectedFiles = Array.from(imageInput.files);
        errorMessage.style.display = 'none';

        selectedFiles.forEach((file, index) => {
            if (!file.type.startsWith('image/')) {
                errorMessage.style.display = 'block';
                errorMessage.innerText = 'Only images are allowed.';
                return;
            }

            const reader = new FileReader();
            reader.onload = function (e) {
                createImagePreview(e.target.result, file.name, index);
            };
            reader.readAsDataURL(file);
        });
    }

    function createImagePreview(src, name, index) {
        const previewImage = document.createElement('img');
        previewImage.className = 'preview-image';
        previewImage.src = src;
        previewImage.title = name;
        previewImage.width = 300;
        previewImage.height = 300;

        const viewButton = createButton('View', () => openCropperModal(src, index, previewImage));
        const deleteButton = createButton('Delete', () => removeImage(index));

        const container = document.createElement('div');
        container.className = 'outer-div';
        container.appendChild(previewImage);
        container.appendChild(viewButton);
        container.appendChild(deleteButton);

        previewContainer.appendChild(container);
    }

    function createButton(text, onClick) {
        const button = document.createElement('button');
        button.innerHTML = text;
        button.type = 'button';
        button.addEventListener('click', onClick);
        return button;
    }

    function openCropperModal(src, index, previewImage) {
        const modal = document.getElementById('myModal');
        const image = document.getElementById('image');
        modal.style.display = 'block';
        image.src = src;

        const cropper = new Cropper(image, {
            aspectRatio: 1 / 1,
            viewMode: 3
        });

        document.querySelector('#btn-crop').addEventListener('click', function () {
            const croppedImage = cropper.getCroppedCanvas().toDataURL("image/png");
            const dimensions = cropper.getData();
            updateHiddenField(index, dimensions);
            previewImage.src = croppedImage;
            closeCropperModal(modal, cropper);
        });
    }

    function closeCropperModal(modal, cropper) {
        modal.style.display = 'none';
        cropper.destroy();
    }

    function updateHiddenField(index, dimensions) {
        const { x, y, width, height } = dimensions;
        hiddenFields[index].value = `index=${index} x=${x} y=${y} width=${width} height=${height}`;
    }

    function removeImage(index) {
        selectedFiles.splice(index, 1);
        updateFileInput();
        previewContainer.children[index].remove();
    }

    function updateFileInput() {
        const dataTransfer = new DataTransfer();
        selectedFiles.forEach(file => dataTransfer.items.add(file));
        imageInput.files = dataTransfer.files;
    }

    document.querySelector('.close').onclick = function () {
        document.getElementById('myModal').style.display = 'none';
    };
</script>

</body>

<!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-form-product-1.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:32 GMT -->
</html 